#############################################################
#
# Template for the Moxa E1214 module:
#   6 DIs
#   6 relays
#
# Macros:
# P - base PV name
# R - module PV name
# PORT - asyn port name (modbus TCP)
# IP_PORT - the low level IP port name (used for drvAsynIPPortConfigure)
# ADDR - asyn address (defaults to 0)
# 
# Matt Pearson
# Feb 2019
#
#############################################################

# Include common records used by all modules
include "ioLogikCommon.template"

########################################################
# Polling functions. The records are processed using a 
# seq record.

# ///
# /// All digital inputs (1-6)
# ///
record(mbbiDirect, "$(P)$(R)DI") {
  field(DESC, "All DI")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask($(PORT)1w4,48,0x003F,1)INT32_BE")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(R)DI0")
}
record(bi, "$(P)$(R)DI0") {
  field(INP, "$(P)$(R)DI.B0 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI1")
}
record(bi, "$(P)$(R)DI1") {
  field(INP, "$(P)$(R)DI.B1 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI2")
}
record(bi, "$(P)$(R)DI2") {
  field(INP, "$(P)$(R)DI.B2 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI3")
}
record(bi, "$(P)$(R)DI3") {
  field(INP, "$(P)$(R)DI.B3 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI4")
}
record(bi, "$(P)$(R)DI4") {
  field(INP, "$(P)$(R)DI.B4 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI5")
}
record(bi, "$(P)$(R)DI5") {
  field(INP, "$(P)$(R)DI.B5 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

# ///
# /// All relay status (1-6)
# ///
record(mbbiDirect, "$(P)$(R)RLY") {
  field(DESC, "All Relays")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask($(PORT)1w3,32,0x003F,1)INT32_BE")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(R)RLY0")
}
record(bi, "$(P)$(R)RLY0") {
  field(INP, "$(P)$(R)RLY.B0 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)RLY1")
}
record(bi, "$(P)$(R)RLY1") {
  field(INP, "$(P)$(R)RLY.B1 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)RLY2")
}
record(bi, "$(P)$(R)RLY2") {
  field(INP, "$(P)$(R)RLY.B2 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)RLY3")
}
record(bi, "$(P)$(R)RLY3") {
  field(INP, "$(P)$(R)RLY.B3 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)RLY4")
}
record(bi, "$(P)$(R)RLY4") {
  field(INP, "$(P)$(R)RLY.B4 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)RLY5")
}
record(bi, "$(P)$(R)RLY5") {
  field(INP, "$(P)$(R)RLY.B5 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

# ///
# /// Polling control
# ///
record(seq, "$(P)$(R)FastPollControl") {
  field(SCAN, ".1 second")
  field(DOL1, "1")
  field(DOL2, "1")
  field(LNK1, "$(P)$(R)DI.PROC PP")
  field(LNK2, "$(P)$(R)RLY.PROC PP")
}

###########################################################
# Write functions

# ///
# /// Set the relay status. This can be done by
# /// setting the bits (B0-B5).
# ///
record(mbboDirect, "$(P)$(R)RLYSet") {
  field(DESC, "Set All Relays")
  field(DTYP, "asynUInt32Digital")
  field(OUT, "@asynMask($(PORT)1w6,32,0x003F,1)INT32_BE")
  field(FLNK, "$(P)$(R)RLY")
}

############################################################
# Communication alarm calc

# ///
# /// Calculate if we have a comms alarm
# ///
record(calcout, "$(P)$(R)AlarmCalc") {
  field(INPA, "$(P)$(R)AlarmControl CP")
  field(INPB, "$(P)$(R)DI.STAT CP")
  field(INPC, "$(P)$(R)RLY.STAT CP")
  field(INPD, "$(P)$(R)Uptime.STAT CP")
  field(INPE, "$(P)$(R)Watchdog CP")
  field(CALC, "A?(B||C||D||E):0")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(OUT, "$(P)$(R)Alarm PP")
}




