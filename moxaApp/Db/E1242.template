####################################################################
#
# Template for the Moxa E1242 module:
#   4 analog inputs (voltage/current configurable by jumper). The default is voltage mode.
#   4 digital IO (input/output configurable by jumper). The default is DO mode.
#   4 digital inputs
#
# This template has only been tested with the DIO in default DO mode.
#
# Macros:
# P - base PV name
# R - module PV name
# PORT - asyn port name (modbus TCP)
# IP_PORT - the low level IP port name (used for drvAsynIPPortConfigure)
# ADDR - asyn address (defaults to 0)
# 
# Matt Pearson
# Feb 2019
#
#####################################################################

# Include common records used by all modules
include "ioLogikCommon.template"

#####################################################################
# Polling functions. The records are processed using a seq record.

# ///
# /// All digital inputs (0-3)
# ///
record(mbbiDirect, "$(P)$(R)DI") {
  field(DESC, "All DI")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask($(PORT)1w4,48,0x000F,1)INT32_BE")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(R)DI0")
}
record(bi, "$(P)$(R)DI0") {
  field(INP, "$(P)$(R)DI.B0 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI1")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DI1") {
  field(INP, "$(P)$(R)DI.B1 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI2")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DI2") {
  field(INP, "$(P)$(R)DI.B2 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DI3")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DI3") {
  field(INP, "$(P)$(R)DI.B3 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  info(archive, "Monitor, 00:00:01, VAL")
}

# ///
# /// Control the alarm state for each DI
# ///
substitute "DI=DI0"
include "DI_alarm.template"

substitute "DI=DI1"
include "DI_alarm.template"

substitute "DI=DI2"
include "DI_alarm.template"

substitute "DI=DI3"
include "DI_alarm.template"

# ///
# /// All digital output status (0-3)
# ///
record(mbbiDirect, "$(P)$(R)DO") {
  field(DESC, "All DO")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask($(PORT)1w3,32,0x000F,1)INT32_BE")
  field(SCAN, "Passive")
  field(FLNK, "$(P)$(R)DO0")
}
record(bi, "$(P)$(R)DO0") {
  field(INP, "$(P)$(R)DO.B0 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DO1")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DO1") {
  field(INP, "$(P)$(R)DO.B1 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DO2")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DO2") {
  field(INP, "$(P)$(R)DO.B2 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  field(FLNK, "$(P)$(R)DO3")
  info(archive, "Monitor, 00:00:01, VAL")
}
record(bi, "$(P)$(R)DO3") {
  field(INP, "$(P)$(R)DO.B3 MS")
  field(ZNAM, "Off")
  field(ONAM, "On")
  info(archive, "Monitor, 00:00:01, VAL")
}




# ///
# /// Polling control
# ///
record(seq, "$(P)$(R)FastPollControl") {
  field(SCAN, ".1 second")
  field(DOL1, "1")
  field(DOL2, "1")
  field(LNK1, "$(P)$(R)DI.PROC PP")
  field(LNK2, "$(P)$(R)DO.PROC PP")
}


#####################################################################
# Set functions.

# ///
# /// Set the DO status. This can be done by
# /// setting the bits (B0-B3).
# ///
record(mbboDirect, "$(P)$(R)DOSet") {
  field(DESC, "Set All DO")
  field(DTYP, "asynUInt32Digital")
  field(OUT, "@asynMask($(PORT)1w6,32,0x000F,1)INT32_BE")
  field(FLNK, "$(P)$(R)DO")
  info(archive, "Monitor, 00:00:01, VAL")
}


#####################################################################
# Alarm calculation for this module

# ///
# /// Calculate if we have a comms alarm
# ///
record(calc, "$(P)$(R)AlarmCalcDI") {
  field(INPA, "$(P)$(R)DI0.STAT CP")
  field(INPB, "$(P)$(R)DI1.STAT CP")
  field(INPC, "$(P)$(R)DI2.STAT CP")
  field(INPD, "$(P)$(R)DI3.STAT CP")
  field(CALC, "A||B||C||D")
}
record(calcout, "$(P)$(R)AlarmCalcComms") {
  field(INPA, "$(P)$(R)AlarmCtrl CP")
  field(INPB, "$(P)$(R)DI.STAT CP")
  field(INPC, "$(P)$(R)DO.STAT CP")
  field(INPD, "$(P)$(R)Uptime.STAT CP")
  field(INPE, "$(P)$(R)Watchdog CP")
  field(INPF, "$(P)$(R)AlarmCalcDI CP")
  field(CALC, "A?(B||C||D||E||F):0")
  field(OOPT, "Every Time")
  field(DOPT, "Use CALC")
  field(OUT, "$(P)$(R)Alarm PP")
}
